CREATE TABLE
  Users (
    User_login VARCHAR(255) NOT NULL PRIMARY KEY,
    PASSWORD VARCHAR(255) NOT NULL
  );

CREATE TABLE
  FriendRequest (
    Request_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Status_request VARCHAR(255) NOT NULL,
    Senders_login VARCHAR(255) NOT NULL REFERENCES Users (User_login),
    Recipient_login VARCHAR(255) NOT NULL REFERENCES Users (User_login)
  );

CREATE TABLE
  Friendships (
    Friendship_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Senders_login VARCHAR(255) NOT NULL REFERENCES Users (User_login),
    Recipient_login VARCHAR(255) NOT NULL REFERENCES Users (User_login)
  );

CREATE TABLE
  Tasks (
    TaskID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    User_login VARCHAR(255) NOT NULL REFERENCES Users (User_login),
    Task_name VARCHAR(255) NOT NULL,
    Creation_date TIMESTAMP WITH TIME ZONE NOT NULL,
    Deadline TIMESTAMP WITH TIME ZONE,
    Task_status VARCHAR(255) NOT NULL
  );

CREATE TABLE
  Regularity (
    Regularity_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Regularity_interval VARCHAR(255) NOT NULL,
    Days_of_week VARCHAR(14) NOT NULL,
    End_date TIMESTAMP WITH TIME ZONE
  );

CREATE TABLE
  Events (
    Event_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    User_login VARCHAR(255) NOT NULL REFERENCES Users (User_login),
    Event_name VARCHAR(255) NOT NULL,
    Start_time_and_date TIMESTAMP WITH TIME ZONE NOT NULL,
    End_time_and_date TIMESTAMP WITH TIME ZONE,
    LOCATION VARCHAR(255),
    Category VARCHAR(255),
    COMMENT TEXT,
    Regularity_ID INTEGER REFERENCES Regularity (Regularity_ID)
  );

CREATE TABLE
  SharedEvents (
    Shared_event_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Shared_event_name VARCHAR(255) NOT NULL,
    Start_time_and_date TIMESTAMP WITH TIME ZONE NOT NULL,
    End_time_and_date TIMESTAMP WITH TIME ZONE,
    LOCATION VARCHAR(255),
    Category VARCHAR(255),
    COMMENT TEXT,
    Regularity_ID INTEGER REFERENCES Regularity (Regularity_ID)
  );

CREATE TABLE
  JointSharedEventRequests (
    Request_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Senders_login VARCHAR(255) NOT NULL REFERENCES Users (User_login),
    Recipient_login VARCHAR(255) NOT NULL REFERENCES Users (User_login),
    Shared_event_name VARCHAR(255) NOT NULL,
    Start_time_and_date TIMESTAMP WITH TIME ZONE NOT NULL,
    End_time_and_date TIMESTAMP WITH TIME ZONE,
    Regularity_ID INTEGER REFERENCES Regularity (Regularity_ID),
    LOCATION VARCHAR(255),
    Category VARCHAR(255),
    COMMENT TEXT,
    Request_status VARCHAR(255) NOT NULL
  );

CREATE TABLE
  JointSharedEventParticipation (
    Shared_event_ID INTEGER NOT NULL REFERENCES SharedEvents (Shared_event_ID),
    User_login VARCHAR(255) NOT NULL REFERENCES Users (User_login),
    PRIMARY KEY (Shared_event_ID, User_login)
  );

